trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  ESP_IDF_VERSION: 'v5.2.2'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

- script: |
    sudo apt-get update
    sudo apt-get install -y build-essential libffi-dev git pkg-config wget flex bison gperf python3-venv cmake ninja-build ccache libssl-dev dfu-util libusb-1.0-0 python-is-python3
  displayName: 'Install required dependencies'

- script: |
    mkdir -p $HOME/esp
    cd $HOME/esp
    git clone -b $(ESP_IDF_VERSION) --recursive https://github.com/espressif/esp-idf.git
    cd esp-idf
    ./install.sh esp32,esp32s2,esp32s3
  displayName: 'Setup ESP-IDF'

- script: |
    echo "alias get_idf='. $HOME/esp/esp-idf/export.sh'" >> ~/.bashrc
    echo "alias python='python3'" >> ~/.bashrc
    source ~/.bashrc
  displayName: 'Configure .bashrc'

- script: |
    . $HOME/esp/esp-idf/export.sh
    cd $HOME
    git clone https://github.com/polcaballero/micropython
  displayName: 'Clone MicroPython repository'

- script: |
    cd $HOME/micropython
    make -C mpy-cross
  displayName: 'Build MicroPython cross-compiler'

- script: |
    . $HOME/esp/esp-idf/export.sh
    cd $HOME/micropython/ports/esp32
    make submodules
    make
  displayName: 'Build MicroPython firmware'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$HOME/micropython/ports/esp32/build'
    ArtifactName: 'MicroPythonFirmware'
  displayName: 'Publish MicroPython firmware artifacts'
